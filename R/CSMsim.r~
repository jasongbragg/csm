#' Performs a simulation of a protracted birth-death model
#' with phenotypic evolution suitable for identifying 
#' species that are morphologically cryptic
#'
#' (Based on models in: )
#'
#' @param lam1 - speciation of good species [Required]
#' @param lam2 - speciation of nascent species [Required]
#' @param lam3 - rate of speciation completion [Required]
#' @param mu1  - extinction of good species [Required]
#' @param mu2  - extinction of nascent species [Required]
#' @param crown_or_stem  - extinction of nascent species 
#' @param pp             - if nascent, p(shared parent phenotype change) 
#' @return an object 
#' @author Jason Bragg (jasongbragg@gmail.com)
#' @export
#' @examples
#' \dontrun{
#' simulation <- CSMsim(5,5,3,0.3,0.3,0,0.8,0.01)
#' }

CSMsim <- function(lam1, lam2, lam3, mu1, mu2, crown_or_stem=0, pp=1.0, trait_step=0.01, out="phylo") {

   run <- TRUE

   if (lam1 < 0 | lam2 < 0 | lam3 < 0 | mu1 < 0 | mu2 < 0) {
      run <- FALSE
      cat("   Macroevolutionary rate values must be positive. Not running. \n")
   }

   if (lam1 == 0 & lam2 == 0) {
      run <- FALSE
      cat("   Speciation rate for either good or nascent species must be non-zero. Not running. \n")
   }

   if (crown_or_stem != 0 & crown_or_stem != 1) {
      run <- FALSE
      cat("   The parameter crown_or_stem must be either 0 or 1. Not running. \n")
   }

   if (pp < 0 | pp > 1) {
      run <- FALSE
      cat("   The parameter pp must be a value between (or equal to) 0 or 1. Not running. \n")
   }

   if (trait_step <= 0 | trait_step >= 1) {
      run <- FALSE
      cat("   The parameter trait_step should be a value between 0 or 1. Not running. \n")
   }


   if (run) {

      require(ape)

      csm_out <- csm(lam1, lam2, lam3, mu1, mu2, crown_or_stem=crown_or_stem, pp=pp, t_step=trait_step)

      run_status <- csm_out[[1]]
      net_tip_count <- nrow(csm_out[[2]])

      if (run_status == "extinction") {
         #cat("extinction \n")
         return(list(run_status=run_status, net_tip_count=net_tip_count))
      }  


      if (run_status == "overstep") {
         #cat("overstepping \n")
         return(list(run_status=run_status))
      } 

      if (run_status == "timeout" & out == "phylo") {

         # get the phylogeny in ape phylo class
         tax_tree   <- csm_out[[2]]
         i_extant   <- which(tax_tree[,4] > 0 )

         if (length(i_extant) <= 2) {
            return(list(run_status="TwoOrFewerExtant"))
         } else {

            csm_phy    <- csm2phylo(tax_tree)

            # get traits
            tax_traits <- csm_out[[4]]

            # remove extinct
            i_extinct  <- which(tax_tree[,4] == 0 )
            if (length(i_extinct) == 0) {
            # none extinct
            } else {
               tips_to_drop <- csm_phy$tip.label[i_extinct] 
               csm_phy      <- drop.tip(csm_phy, tips_to_drop)
               tax_traits   <- tax_traits[ -i_extinct, ]
            }
         
            rownames(tax_traits) <- csm_phy$tip.label

            csm_sim <- list(run_status=run_status, csm_phy=csm_phy, csm_traits=tax_traits)

            return(csm_sim)
         }
      }

      if (run_status == "timeout" & out == "flat") {
         return(csm_out)
      }

   }

}


